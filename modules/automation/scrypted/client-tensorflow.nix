# Auto-generated using compose2nix v0.3.1. from the official scrypted docker-compose file.
# This configuration enables the use of TensorFlow Coral detection, as using Python 3.9 with libedgetpu is not possible on current Nix versions.
{ config, lib, ... }:
let
  cfg = config.cluster.automation.scrypted;
  isTensorflowClient = cfg.role == "client-tensorflow";
in
{
  config = lib.mkIf (cfg.enable && isTensorflowClient) {
    # Runtime
    virtualisation.podman = {
      enable = true;
      autoPrune.enable = true;
      dockerSocket.enable = true;
      dockerCompat = true;
      defaultNetwork.settings = {
        # Required for container networking to be able to use names.
        dns_enabled = true;
      };
    };

    # Enable container name DNS for non-default Podman networks.
    # https://github.com/NixOS/nixpkgs/issues/226365
    networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

    virtualisation.oci-containers.backend = "podman";

    # Containers
    virtualisation.oci-containers.containers."scrypted" = {
      image = "ghcr.io/koush/scrypted";
      # user = "scrypted:scrypted";
      volumes = [
        "/var/lib/scrypted:/server/volume:rw"
      ];

      # Uncomment to receive additional log output for debugging.
      #log-driver = "none";

      extraOptions = [
        "--device=/dev/bus/usb:/dev/bus/usb:rwm"
        "--device=/dev/dri:/dev/dri:rwm"
        "--network=host"
        "--group-add=${toString config.ids.gids.scrypted}"
      ];
    };
    systemd.services."podman-scrypted" = {

      serviceConfig = {
        Restart = lib.mkOverride 90 "always";
        # User = "scrypted";
        # Group = "scrypted";
      };
      partOf = [
        "podman-compose-scrypted-root.target"
      ];
      wantedBy = [
        "podman-compose-scrypted-root.target"
      ];
    };

    # Root service
    # When started, this will automatically create all resources and start
    # the containers. When stopped, this will teardown all resources.
    systemd.targets."podman-compose-scrypted-root" = {
      unitConfig = {
        Description = "Root target generated by compose2nix.";
      };
      wantedBy = [ "multi-user.target" ];
    };
  };
}
